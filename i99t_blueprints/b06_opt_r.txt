template <typename Ntk>
mockturtle::names_view<Ntk> b06_opt_r()
{
    mockturtle::names_view<Ntk> ntk{};
    const auto RESET_G = ntk.create_pi("RESET_G");
    const auto nRESET_G = ntk.create_pi("nRESET_G");
    const auto EQL = ntk.create_pi("EQL");
    const auto CONT_EQL = ntk.create_pi("CONT_EQL");
    const auto STATE_REG_2_ = ntk.create_ro();
    const auto STATE_REG_1_ = ntk.create_ro();
    const auto STATE_REG_0_ = ntk.create_ro();
    const auto CC_MUX_REG_2_ = ntk.create_ro();
    const auto CC_MUX_REG_1_ = ntk.create_ro();
    const auto USCITE_REG_2_ = ntk.create_ro();
    const auto USCITE_REG_1_ = ntk.create_ro();
    const auto ENABLE_COUNT_REG = ntk.create_ro();
    const auto ACKOUT_REG = ntk.create_ro();
    const auto U102_h1 = ntk.create_and(STATE_REG_2_, STATE_REG_1_);
    const auto U102 = ntk.create_and(U102_h1, STATE_REG_0_);
    const auto U103 = ntk.create_not(STATE_REG_1_);
    const auto U104 = ntk.create_not(EQL);
    const auto U105_h = ntk.create_and(EQL, STATE_REG_1_);
    const auto U105 = ntk.create_not(U105_h);
    const auto U106 = ntk.create_not(STATE_REG_2_);
    const auto U107 = ntk.create_not(STATE_REG_0_);
    const auto U108 = ntk.create_or(STATE_REG_2_, STATE_REG_0_);
    const auto U109_h1 = ntk.create_and(U103, U106);
    const auto U109_h2 = ntk.create_and(U109_h1, STATE_REG_0_);
    const auto U109 = ntk.create_not(U109_h2);
    const auto U110_h1 = ntk.create_and(STATE_REG_2_, U107);
    const auto U110_h2 = ntk.create_and(U103, U104);
    const auto U110_h3 = ntk.create_and(U110_h1, U110_h2);
    const auto U110 = ntk.create_not(U110_h3);
    const auto U111 = ntk.create_not(U108);
    const auto U112 = ntk.create_not(U105);
    const auto U113_h = ntk.create_and(STATE_REG_2_, U112);
    const auto U113 = ntk.create_not(U113_h);
    const auto U114_h = ntk.create_and(STATE_REG_2_, STATE_REG_1_);
    const auto U114 = ntk.create_not(U114_h);
    const auto U115 = ntk.create_or(STATE_REG_1_, STATE_REG_0_);
    const auto U116_h = ntk.create_and(U104, U115);
    const auto U116 = ntk.create_not(U116_h);
    const auto U117_h = ntk.create_and(STATE_REG_2_, U116);
    const auto U117 = ntk.create_not(U117_h);
    const auto U118_h1 = ntk.create_and(EQL, U106);
    const auto U118_h2 = ntk.create_and(U118_h1, STATE_REG_0_);
    const auto U118 = ntk.create_not(U118_h2);
    const auto U119_h = ntk.create_and(U111, STATE_REG_1_);
    const auto U119 = ntk.create_not(U119_h);
    const auto U120_h1 = ntk.create_and(STATE_REG_1_, U104);
    const auto U120_h2 = ntk.create_and(U120_h1, U111);
    const auto U120 = ntk.create_not(U120_h2);
    const auto U121 = ntk.create_or(CONT_EQL, U102);
    const auto U122_h = ntk.create_and(U112, U107);
    const auto U122 = ntk.create_not(U122_h);
    const auto U123_h = ntk.create_and(STATE_REG_2_, U116);
    const auto U123 = ntk.create_not(U123_h);
    const auto U124_h = ntk.create_and(EQL, U107);
    const auto U124 = ntk.create_not(U124_h);
    const auto U125_h = ntk.create_and(STATE_REG_0_, STATE_REG_2_);
    const auto U125 = ntk.create_not(U125_h);
    const auto U126_h = ntk.create_and(U111, U103);
    const auto U126 = ntk.create_not(U126_h);
    const auto U127_h = ntk.create_and(STATE_REG_0_, STATE_REG_1_);
    const auto U127 = ntk.create_not(U127_h);
    const auto U128_h = ntk.create_and(EQL, U103);
    const auto U128 = ntk.create_not(U128_h);
    const auto U129_h = ntk.create_and(STATE_REG_1_, U124);
    const auto U129 = ntk.create_not(U129_h);
    const auto U92 = ntk.create_or(U109, EQL);
    const auto U93 = ntk.create_and(U127, U126);
    const auto U94_h1 = ntk.create_and(nRESET_G, U93);
    const auto U94_h2 = ntk.create_and(U94_h1, U116);
    const auto U94 = ntk.create_not(U94_h2);
    const auto U95_h1 = ntk.create_and(nRESET_G, U119);
    const auto U95_h2 = ntk.create_and(U95_h1, U118);
    const auto U95_h3 = ntk.create_and(U118, U105);
    const auto U95_h4 = ntk.create_and(U95_h2, U95_h3);
    const auto U95 = ntk.create_not(U95_h4);
    const auto U96_h1 = ntk.create_and(nRESET_G, U117);
    const auto U96_h2 = ntk.create_and(U96_h1, U92);
    const auto U96 = ntk.create_not(U96_h2);
    const auto U97_h1 = ntk.create_and(nRESET_G, U125);
    const auto U97_h2 = ntk.create_and(U97_h1, U108);
    const auto U97_h3 = ntk.create_and(U108, U129);
    const auto U97_h4 = ntk.create_and(U97_h2, U97_h3);
    const auto U97 = ntk.create_not(U97_h4);
    const auto U98_h1 = ntk.create_and(nRESET_G, U123);
    const auto U98_h2 = ntk.create_and(U109, U122);
    const auto U98_h3 = ntk.create_and(U98_h1, U98_h2);
    const auto U98 = ntk.create_not(U98_h3);
    const auto U99_h1 = ntk.create_and(nRESET_G, EQL);
    const auto U99_h2 = ntk.create_and(U114, U93);
    const auto U99_h3 = ntk.create_and(U99_h1, U99_h2);
    const auto U99 = ntk.create_not(U99_h3);
    const auto U100_h1 = ntk.create_and(nRESET_G, U110);
    const auto U100_h2 = ntk.create_and(U100_h1, U113);
    const auto U100 = ntk.create_not(U100_h2);
    const auto U101_h1 = ntk.create_and(nRESET_G, nRESET_G);
    const auto U101_h2 = ntk.create_and(U121, U120);
    const auto U101_h3 = ntk.create_and(U101_h1, U101_h2);
    const auto U101 = ntk.create_not(U101_h3);

    const auto bridge_out_neg_1 = ntk.create_not(CC_MUX_REG_2_);
    const auto bridge_out_1 = ntk.create_not(bridge_out_neg_1);
    const auto bridge_out_neg_2 = ntk.create_not(CC_MUX_REG_1_);
    const auto bridge_out_2 = ntk.create_not(bridge_out_neg_2);
    const auto bridge_out_neg_3 = ntk.create_not(USCITE_REG_2_);
    const auto bridge_out_3 = ntk.create_not(bridge_out_neg_3);
    const auto bridge_out_neg_4 = ntk.create_not(USCITE_REG_1_);
    const auto bridge_out_4 = ntk.create_not(bridge_out_neg_4);
    const auto bridge_out_neg_5 = ntk.create_not(ENABLE_COUNT_REG);
    const auto bridge_out_5 = ntk.create_not(bridge_out_neg_5);
    const auto bridge_out_neg_6 = ntk.create_not(ACKOUT_REG);
    const auto bridge_out_6 = ntk.create_not(bridge_out_neg_6);

    ntk.create_po(bridge_out_1, "CC_MUX_REG_2_");
    ntk.create_po(bridge_out_2, "CC_MUX_REG_1_");
    ntk.create_po(bridge_out_3, "USCITE_REG_2_");
    ntk.create_po(bridge_out_4, "USCITE_REG_1_");
    ntk.create_po(bridge_out_5, "ENABLE_COUNT_REG");
    ntk.create_po(bridge_out_6, "ACKOUT_REG");

    ntk.create_ri(U96);
    ntk.create_ri(U95);
    ntk.create_ri(U94);
    ntk.create_ri(U98);
    ntk.create_ri(U97);
    ntk.create_ri(U100);
    ntk.create_ri(U99);
    ntk.create_ri(U101);
    ntk.create_ri(U101);

    return ntk;
}