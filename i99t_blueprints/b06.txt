template <typename Ntk>
mockturtle::names_view<Ntk> b06()
{
    mockturtle::names_view<Ntk> ntk{};
    const auto EQL = ntk.create_pi("EQL");
    const auto CONT_EQL = ntk.create_pi("CONT_EQL");
    const auto ACKOUT_REG = ntk.create_ro();
    const auto STATE_REG_2_ = ntk.create_ro();
    const auto STATE_REG_1_ = ntk.create_ro();
    const auto STATE_REG_0_ = ntk.create_ro();
    const auto CC_MUX_REG_2_ = ntk.create_ro();
    const auto CC_MUX_REG_1_ = ntk.create_ro();
    const auto USCITE_REG_2_ = ntk.create_ro();
    const auto USCITE_REG_1_ = ntk.create_ro();
    const auto ENABLE_COUNT_REG = ntk.create_ro();
    const auto U63_h1 = ntk.create_and(STATE_REG_2_, STATE_REG_1_);
    const auto U63 = ntk.create_and(U63_h1, STATE_REG_0_);
    const auto U64 = ntk.create_not(STATE_REG_1_);
    const auto U65 = ntk.create_not(EQL);
    const auto U66_h = ntk.create_and(EQL, STATE_REG_1_);
    const auto U66 = ntk.create_not(U66_h);
    const auto U67 = ntk.create_not(STATE_REG_2_);
    const auto U68 = ntk.create_not(STATE_REG_0_);
    const auto U69 = ntk.create_or(STATE_REG_2_, STATE_REG_0_);
    const auto U70_h1 = ntk.create_and(U64, U67);
    const auto U70_h2 = ntk.create_and(U70_h1, STATE_REG_0_);
    const auto U70 = ntk.create_not(U70_h2);
    const auto U71 = ntk.create_not(U66);
    const auto U72_h1 = ntk.create_and(STATE_REG_2_, U68);
    const auto U72_h2 = ntk.create_and(U64, U65);
    const auto U72_h3 = ntk.create_and(U72_h1, U72_h2);
    const auto U72 = ntk.create_not(U72_h3);
    const auto U73 = ntk.create_not(U69);
    const auto U74 = ntk.create_not(U70);
    const auto U75_h = ntk.create_and(STATE_REG_2_, U71);
    const auto U75 = ntk.create_not(U75_h);
    const auto U76_h = ntk.create_and(STATE_REG_2_, STATE_REG_1_);
    const auto U76 = ntk.create_not(U76_h);
    const auto U77 = ntk.create_or(STATE_REG_1_, STATE_REG_0_);
    const auto U78_h = ntk.create_and(U65, U77);
    const auto U78 = ntk.create_not(U78_h);
    const auto U79_h = ntk.create_and(U74, U65);
    const auto U79 = ntk.create_not(U79_h);
    const auto U80_h = ntk.create_and(STATE_REG_2_, U78);
    const auto U80 = ntk.create_not(U80_h);
    const auto U81_h1 = ntk.create_and(EQL, U67);
    const auto U81_h2 = ntk.create_and(U81_h1, STATE_REG_0_);
    const auto U81 = ntk.create_not(U81_h2);
    const auto U82_h = ntk.create_and(U73, STATE_REG_1_);
    const auto U82 = ntk.create_not(U82_h);
    const auto U83_h1 = ntk.create_and(STATE_REG_1_, U65);
    const auto U83_h2 = ntk.create_and(U83_h1, U73);
    const auto U83 = ntk.create_not(U83_h2);
    const auto U84 = ntk.create_or(CONT_EQL, U63);
    const auto U85_h = ntk.create_and(U71, U68);
    const auto U85 = ntk.create_not(U85_h);
    const auto U86_h = ntk.create_and(STATE_REG_2_, U78);
    const auto U86 = ntk.create_not(U86_h);
    const auto U87_h = ntk.create_and(EQL, U68);
    const auto U87 = ntk.create_not(U87_h);
    const auto U88_h = ntk.create_and(STATE_REG_0_, STATE_REG_2_);
    const auto U88 = ntk.create_not(U88_h);
    const auto U89_h = ntk.create_and(U73, U64);
    const auto U89 = ntk.create_not(U89_h);
    const auto U90_h = ntk.create_and(STATE_REG_0_, STATE_REG_1_);
    const auto U90 = ntk.create_not(U90_h);
    const auto U91_h = ntk.create_and(EQL, U64);
    const auto U91 = ntk.create_not(U91_h);
    const auto U92_h = ntk.create_and(STATE_REG_1_, U87);
    const auto U92 = ntk.create_not(U92_h);
    const auto U54 = ntk.create_and(U90, U89);
    const auto U55_h = ntk.create_and(U54, U78);
    const auto U55 = ntk.create_not(U55_h);
    const auto U56_h1 = ntk.create_and(U82, U81);
    const auto U56_h2 = ntk.create_and(U72, U66);
    const auto U56_h3 = ntk.create_and(U56_h1, U56_h2);
    const auto U56 = ntk.create_not(U56_h3);
    const auto U57_h = ntk.create_and(U80, U79);
    const auto U57 = ntk.create_not(U57_h);
    const auto U58_h1 = ntk.create_and(U88, U69);
    const auto U58_h2 = ntk.create_and(U92, U91);
    const auto U58_h3 = ntk.create_and(U58_h1, U58_h2);
    const auto U58 = ntk.create_not(U58_h3);
    const auto U59_h1 = ntk.create_and(U86, U70);
    const auto U59_h2 = ntk.create_and(U59_h1, U85);
    const auto U59 = ntk.create_not(U59_h2);
    const auto U60_h1 = ntk.create_and(EQL, U76);
    const auto U60_h2 = ntk.create_and(U60_h1, U54);
    const auto U60 = ntk.create_not(U60_h2);
    const auto U61_h = ntk.create_and(U72, U75);
    const auto U61 = ntk.create_not(U61_h);
    const auto U62_h = ntk.create_and(U84, U83);
    const auto U62 = ntk.create_not(U62_h);

    const auto bridge_out_neg_1 = ntk.create_not(CC_MUX_REG_2_);
    const auto bridge_out_1 = ntk.create_not(bridge_out_neg_1);
    const auto bridge_out_neg_2 = ntk.create_not(CC_MUX_REG_1_);
    const auto bridge_out_2 = ntk.create_not(bridge_out_neg_2);
    const auto bridge_out_neg_3 = ntk.create_not(USCITE_REG_2_);
    const auto bridge_out_3 = ntk.create_not(bridge_out_neg_3);
    const auto bridge_out_neg_4 = ntk.create_not(USCITE_REG_1_);
    const auto bridge_out_4 = ntk.create_not(bridge_out_neg_4);
    const auto bridge_out_neg_5 = ntk.create_not(ENABLE_COUNT_REG);
    const auto bridge_out_5 = ntk.create_not(bridge_out_neg_5);
    const auto bridge_out_neg_6 = ntk.create_not(ACKOUT_REG);
    const auto bridge_out_6 = ntk.create_not(bridge_out_neg_6);

    ntk.create_po(bridge_out_1, "CC_MUX_REG_2_");
    ntk.create_po(bridge_out_2, "CC_MUX_REG_1_");
    ntk.create_po(bridge_out_3, "USCITE_REG_2_");
    ntk.create_po(bridge_out_4, "USCITE_REG_1_");
    ntk.create_po(bridge_out_5, "ENABLE_COUNT_REG");
    ntk.create_po(bridge_out_6, "ACKOUT_REG");

    ntk.create_ri(U62);
    ntk.create_ri(U57);
    ntk.create_ri(U56);
    ntk.create_ri(U55);
    ntk.create_ri(U59);
    ntk.create_ri(U58);
    ntk.create_ri(U61);
    ntk.create_ri(U60);
    ntk.create_ri(U62);

    return ntk;
}