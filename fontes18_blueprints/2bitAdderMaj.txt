template <typename Ntk>
mockturtle::names_view<Ntk> 2bitAdderMaj()
{
    mockturtle::names_view<Ntk> ntk{};
    const auto a = ntk.create_pi("a");
    const auto b = ntk.create_pi("b");
    const auto c = ntk.create_pi("c");
    const auto d = ntk.create_pi("d");
    const auto e = ntk.create_pi("e");
    const auto new_n8 = ntk.create_and(a, b);
    const auto new_n9 = ntk.create_and(a, c);
    const auto nnew_n8 = ntk.create_not(new_n8);
    const auto nnew_n9 = ntk.create_not(new_n9);
    const auto new_n10 = ntk.create_and(nnew_n8, nnew_n9);
    const auto new_n11 = ntk.create_and(b, c);
    const auto nnew_n11 = ntk.create_not(new_n11);
    const auto new_n12 = ntk.create_and(new_n10, nnew_n11);
    const auto new_n13 = ntk.create_and(nnew_n9, nnew_n11);
    const auto new_n14 = ntk.create_and(nnew_n8, new_n13);
    const auto nnew_n12 = ntk.create_not(new_n12);
    const auto nnew_n14 = ntk.create_not(new_n14);
    const auto new_n15 = ntk.create_and(nnew_n12, nnew_n14);
    const auto new_n16 = ntk.create_and(c, nnew_n12);
    const auto nnew_n15 = ntk.create_not(new_n15);
    const auto nnew_n16 = ntk.create_not(new_n16);
    const auto new_n17 = ntk.create_and(nnew_n15, nnew_n16);
    const auto new_n18 = ntk.create_and(c, nnew_n14);
    const auto nnew_n17 = ntk.create_not(new_n17);
    const auto m3 = ntk.create_or(new_n17, new_n18);
    const auto new_n20 = ntk.create_and(d, e);
    const auto new_n21 = ntk.create_and(d, nnew_n12);
    const auto nnew_n20 = ntk.create_not(new_n20);
    const auto nnew_n21 = ntk.create_not(new_n21);
    const auto new_n22 = ntk.create_and(nnew_n20, nnew_n21);
    const auto new_n23 = ntk.create_and(e, nnew_n12);
    const auto nnew_n23 = ntk.create_not(new_n23);
    const auto new_n24 = ntk.create_and(new_n22, nnew_n23);
    const auto new_n25 = ntk.create_and(nnew_n20, nnew_n23);
    const auto new_n26 = ntk.create_and(nnew_n21, new_n25);
    const auto nnew_n24 = ntk.create_not(new_n24);
    const auto nnew_n26 = ntk.create_not(new_n26);
    const auto new_n27 = ntk.create_and(nnew_n24, nnew_n26);
    const auto new_n28 = ntk.create_and(nnew_n12, nnew_n24);
    const auto new_n29 = ntk.create_and(nnew_n12, nnew_n26);
    const auto nnew_n28 = ntk.create_not(new_n28);
    const auto nnew_n29 = ntk.create_not(new_n29);
    const auto new_n30 = ntk.create_and(nnew_n28, nnew_n29);
    const auto nnew_n30 = ntk.create_not(new_n30);
    const auto m6 = ntk.create_or(new_n27, new_n30);

    ntk.create_po(m3, "m3");
    ntk.create_po(m6, "m6");

    return ntk;
}