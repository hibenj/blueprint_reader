template <typename Ntk>
mockturtle::names_view<Ntk> cm82a_5()
{
    mockturtle::names_view<Ntk> ntk{};
    const auto pi0 = ntk.create_pi("pi0");
    const auto pi1 = ntk.create_pi("pi1");
    const auto pi2 = ntk.create_pi("pi2");
    const auto pi3 = ntk.create_pi("pi3");
    const auto pi4 = ntk.create_pi("pi4");
    const auto npi2 = ntk.create_not(pi2);
    const auto new_n9 = ntk.create_and(pi1, npi2);
    const auto npi1 = ntk.create_not(pi1);
    const auto new_n10 = ntk.create_and(npi1, pi2);
    const auto nnew_n9 = ntk.create_not(new_n9);
    const auto nnew_n10 = ntk.create_not(new_n10);
    const auto new_n11 = ntk.create_and(nnew_n9, nnew_n10);
    const auto new_n12 = ntk.create_and(pi0, new_n11);
    const auto npi0 = ntk.create_not(pi0);
    const auto nnew_n11 = ntk.create_not(new_n11);
    const auto new_n13 = ntk.create_and(npi0, nnew_n11);
    const auto po0 = ntk.create_or(new_n12, new_n13);
    const auto npi4 = ntk.create_not(pi4);
    const auto new_n15 = ntk.create_and(pi3, npi4);
    const auto npi3 = ntk.create_not(pi3);
    const auto new_n16 = ntk.create_and(npi3, pi4);
    const auto nnew_n15 = ntk.create_not(new_n15);
    const auto nnew_n16 = ntk.create_not(new_n16);
    const auto new_n17 = ntk.create_and(nnew_n15, nnew_n16);
    const auto new_n18 = ntk.create_and(npi1, npi2);
    const auto nnew_n18 = ntk.create_not(new_n18);
    const auto new_n19 = ntk.create_and(pi0, nnew_n18);
    const auto new_n20 = ntk.create_and(pi1, pi2);
    const auto nnew_n19 = ntk.create_not(new_n19);
    const auto nnew_n20 = ntk.create_not(new_n20);
    const auto new_n21 = ntk.create_and(nnew_n19, nnew_n20);
    const auto nnew_n21 = ntk.create_not(new_n21);
    const auto new_n22 = ntk.create_and(new_n17, nnew_n21);
    const auto nnew_n17 = ntk.create_not(new_n17);
    const auto new_n23 = ntk.create_and(nnew_n17, new_n21);
    const auto po1 = ntk.create_or(new_n22, new_n23);
    const auto new_n25 = ntk.create_and(npi3, npi4);
    const auto new_n26 = ntk.create_and(pi3, pi4);
    const auto nnew_n26 = ntk.create_not(new_n26);
    const auto new_n27 = ntk.create_and(new_n21, nnew_n26);
    const auto nnew_n25 = ntk.create_not(new_n25);
    const auto nnew_n27 = ntk.create_not(new_n27);
    const auto po2 = ntk.create_and(nnew_n25, nnew_n27);

    ntk.create_po(po0, "po0");
    ntk.create_po(po1, "po1");
    ntk.create_po(po2, "po2");

    return ntk;
}