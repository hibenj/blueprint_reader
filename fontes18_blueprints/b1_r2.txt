template <typename Ntk>
mockturtle::names_view<Ntk> b1_r2()
{
    mockturtle::names_view<Ntk> ntk{};
    const auto pi0 = ntk.create_pi("pi0");
    const auto pi1 = ntk.create_pi("pi1");
    const auto pi2 = ntk.create_pi("pi2");
    const auto new_n8 = ntk.create_and(pi0, pi1);
    const auto npi0 = ntk.create_not(pi0);
    const auto npi1 = ntk.create_not(pi1);
    const auto new_n9 = ntk.create_and(npi0, npi1);
    const auto nnew_n8 = ntk.create_not(new_n8);
    const auto nnew_n9 = ntk.create_not(new_n9);
    const auto po1 = ntk.create_and(nnew_n8, nnew_n9);
    const auto npi2 = ntk.create_not(pi2);
    const auto new_n11 = ntk.create_and(npi2, new_n8);
    const auto new_n12 = ntk.create_and(pi2, new_n9);
    const auto po2 = ntk.create_or(new_n11, new_n12);
    const auto po3 = ntk.create_not(p);

    ntk.create_po(po0, "po0");
    ntk.create_po(po1, "po1");
    ntk.create_po(po2, "po2");
    ntk.create_po(po3, "po3");

    return ntk;
}